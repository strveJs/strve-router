/*!
 * Strve Router v4.0.1
 * (c) 2021-2023 maomincoding
 * Released under the MIT License.
 */
const t="4.0.1",e={path:"",isMounted:!1,_template:null};function n(t,n,r){return n&&window.addEventListener("hashchange",(()=>{e.path=h(),e.isMounted=!1,n((()=>{"function"==typeof r&&r()}),{status:"useRouter"})}),!1),{view:function(){if(e.path)return o(e.path,t);if(location.hash){const n=h();return e.isMounted,o(n,t)}return"/index.html"===location.pathname?o("/",t):o(location.pathname,t)}}}function o(t,n){for(let o=0;o<n.length;o++){const r=n[o];if(r.path===t){if(e.isMounted)return e._template();e.isMounted=!0;const t=new r.template[0];return e._template=t[r.template[1]],e._template()}}}function r(t){var n;"string"==typeof t||"object"===(n=t,Object.prototype.toString.call(n).match(/\[object (.+?)\]/)[1].toLowerCase())?"string"==typeof t?(window.location.href=`${p()}#${t}`,e.path=t):t.path&&"string"==typeof t.path?(t.query?window.location.href=`${p()}#${t.path}?${function(t){const e=[];for(let n in t)e.push(`${n}=${l(t[n])}`);return e.join("&")}(t.query)}`:window.location.href=`${p()}#${t.path}`,e.path=t.path):console.error("[strve-router error]: the first parameter of function linkTo should have a param called path with string when it is an ordinary object"):console.error("[strve-router error]: the first parameter of function linkTo should be a string or a object")}function i(t){window.history.go(t)}function a(){window.history.go(-1)}function c(){window.history.go(1)}function s(){const t=decodeURIComponent(location.href.split("?")[1]).replace(/\+/g," ");if(!t)return{};const e={};return t.split("&").forEach((t=>{const n=t.indexOf("=");if(-1!==n){const o=t.substring(0,n),r=t.substring(n+1,t.length);e[o]=r}})),e}function l(t){return t=(t=(t=(t=(t=(t=(t=(t=(t+="").replace(/%/g,"%25")).replace(/\+/g,"%2B")).replace(/ /g,"%20")).replace(/\//g,"%2F")).replace(/\?/g,"%3F")).replace(/&/g,"%26")).replace(/\=/g,"%3D")).replace(/#/g,"%23")}function h(){return-1!==location.hash.indexOf("?")?location.hash.split("#")[1].split("?")[0]:location.hash.split("#")[1]}function p(){const t=window.location.href,e=t.indexOf("#");return`${e>=0?t.slice(0,e):t}`}export{a as back,c as forward,i as go,n as initRouter,r as linkTo,t as routerVersion,s as toParse};
